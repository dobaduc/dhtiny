{"name":"DHTiny","tagline":"Lightweight Javascript library for developers","body":"# DHTiny - A lighweight javascript library for web developer\r\n\r\n## INTRODUCTION TO DHTINY\r\n\r\n_Firstly_, this library is written to make javascript source code shorter, stronger and more reusable. DHTiny brings a set of “shorcut” attributes and function name to help web developers write strong inline commands, and allows us extend that set freely later.\r\n\r\n_Secondly_, DHTiny provides a lot of methods used for quick DOM processing. Because I overloaded almost all of them, web developers just have to remember a few function names, but can do many kinds of job (Eg: According to given parameters, a method can be a GET or SET method, at both object scope and global scope at the same time).\r\n\r\n_Thirdly_, DHTiny gives support to cross-browser, AJAX & object-oriented programming. Some people might find that prototype extending and instance management are quite interesting functionalities of DHTiny.\r\n\r\nLatest version of DHTiny is 1.1.4, tested on IE 6+, Firefox 2+, Opera 9+, Mac Safari for Win 3+.\r\n\r\n## THE IDEA OF WRITING A JAVASCRIPT LIBRARY FROM SCRATCH\r\n\r\nI'm writting this page in May, 2008, and I have just started writing Web 2.0 applications for nearly 7 months. Formerly, javascript in my thoughts was just something that is used to support web designing and merely create some mediocre effects on web browser, not a fully-feartured OOP language such as C++ or Java. But when I spent some days in playing around with AJAX, trying creating some reusable web components by javascript, I found that a prototype language like javascript can do much more than that.\r\n\r\nBecause JS is a “portable” programming language that can be coded and executed almost anywhere without a specific compiler, I felt the fun in writing JS snippets with just a plain text editor then test them on web browsers in my leisure time. Everything was fine until I had to build a really big web component. I get bored with so many problems (cross-browser, long syntax, OOP,...). In fact, those problems can be solved quite well by using a JS library. But I don’t like to attach a heavy library with some thousands line of code to my web applications, don’t want to spend much time on learning new sophisticated syntax, and besides, no one of currently most famous JS librarys can satisfy my coding style.\r\n\r\nFinally, I decided to write a whole new little library from scratch, in order to be able to write JS code in the way that I like (short, flexible, and strong), and never care about the weight of it. After 1 months without any Sunday or Saturday, I’ve finished my library DHTiny while writing another project for the customer.\r\n\r\nI don’t aim my best efforts at making my DHTiny to be a well-known one, but I hope that some people will encourage my ideas including inside it. Now take a look at DHTiny documentation to see how to start working with it.\r\n\r\n#### _Happy coding with DHTiny!_\r\n\r\n#### Do Ba Duc\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}